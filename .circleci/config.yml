# https://circleci.com/docs/2.0/language-python/
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.1.0

jobs:
  build:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          LOCAL_AWSCLI: True
          PIPENV_VENV_IN_PROJECT: True
          AWS_RESOURCE_NAME_PREFIX: circleci-py-demo
          DATABASE_URL: postgresql://root:password@localhost/circle_test?sslmode=disable
          #DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - '.venv'
            - '/usr/local/bin'
            - '/usr/local/lib/python3.6/site-packages'
      - run:
          command: |
            pipenv run python manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
      - run:
          name: Install AWS CLI
          command: |
            # set -eo pipefail is default
            echo LOCAL_AWSCLI: ${LOCAL_AWSCLI} 
            echo AWS_RESOURCE_NAME_PREFIX: ${AWS_RESOURCE_NAME_PREFIX} 
            if [[ "${CIRCLE_BRANCH}" == "master" &&  ${LOCAL_AWSCLI} == True ]] ; then
              pip install awscli
              aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile default
              aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile default
              aws configure set region ${AWS_DEFAULT_REGION} --profile default
              aws s3 ls # circleci user is granted S3Read default permission.

            fi 
  aws-cli-example:
    # image hold has awscli installed by default
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run: 
          command: |
            echo "Run your code here"
            echo  cat ~/.aws/credentials
            cat ~/.aws/credentials
            aws s3 ls
            
workflows:
  #version: 2
  demo-workflow:
    jobs:
      - build:
          context: techworks
      - aws-cli-example:
          context: techworks 
          requires:
            - build
          filters:
            branches:
              only:
                - master